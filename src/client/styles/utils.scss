// 
// ███████████████████████████████████████████████████████████████████████
//       ADOPTED FROM BOOTSTRAP UTILITY CLASSES
//       https://bootstrap-vue.js.org/docs/reference/utility-classes
// ███████████████████████████████████████████████████████████████████████
// 
// 
// 
// ████  COLORS  ████
// 
:root {
	@each $name,
	$pair in $colors {
		--c-#{$name}: nth($pair, 1) !important;
		--c-#{$name}-inverse: nth($pair, 2) !important;
	}
}

@each $name,
$pair in $colors {
	.bg-#{$name} {
		background-color: nth($pair, 1) !important;
		color: nth($pair, 2) !important;
	}
}

.bg-transparent {
	background-color: transparent !important;
}

// 
// ████  TEXT  ████
// 
@each $name,
$pair in $colors {
	.t-#{$name} {
		color: nth($pair, 1) !important;
	}
}

.t-left {
	text-align: left !important;
}

.t-right {
	text-align: right !important;
}

.t-center {
	text-align: center !important;
}

.t-justify {
	text-align: justify !important;
}

.t-nowrap {
	white-space: nowrap !important;
}

.t-lowercase {
	text-transform: lowercase !important;
}

.t-uppercase {
	text-transform: uppercase !important;
}

.t-capitalize {
	text-transform: capitalize !important;
}

.t-italic {
	font-style: italic !important;
}

.t-underline {
	text-decoration: underline !important;
}

.t-light {
	font-weight: $weight-light !important;
}

.t-normal {
	font-weight: $weight-normal !important;
}

.t-medium {
	font-weight: $weight-medium !important;
}

.t-semibold {
	font-weight: $weight-semibold !important;
}

.t-bold {
	font-weight: $weight-bold !important;
}

$_weights: (100, 200, 300, 400, 500, 600, 700);
@each $_weight in $_weights {
	.t-#{$_weight} {
		font-weight: $_weight !important;
	}
}

// 
// ████  BORDERS  ████
// 
.b-1 {
	border: 1px solid $border !important;
}

.b-top {
	border-top: 1px solid $border !important;
}

.b-right {
	border-right: 1px solid $border !important;
}

.b-bottom {
	border-bottom: 1px solid $border !important;
}

.b-left {
	border-left: 1px solid $border !important;
}

.b-0 {
	border: 0 !important;
}

.b-top-0 {
	border-top: 0 !important;
}

.b-right-0 {
	border-right: 0 !important;
}

.b-bottom-0 {
	border-bottom: 0 !important;
}

.b-left-0 {
	border-left: 0 !important;
}

.r-1 {
	border-radius: $radius !important;
}

.r-top {
	border-top-left-radius: $radius !important;
	border-top-right-radius: $radius !important;
}

.r-right {
	border-top-right-radius: $radius !important;
	border-bottom-right-radius: $radius !important;
}

.r-bottom {
	border-bottom-right-radius: $radius !important;
	border-bottom-left-radius: $radius !important;
}

.r-left {
	border-top-left-radius: $radius !important;
	border-bottom-left-radius: $radius !important;
}

.r-circle {
	border-radius: 50% !important;
}

.r-0 {
	border-radius: 0 !important;
}

// 
// ████  SPACING  ████
// 
$_space: 16;
$_spaces: (0, 1, 2, 3, 4, 5);
@function _calcSpace($step) {
	@if $step==1 {
		@return $_space * 0.25;
	}
	@else if $step==2 {
		@return $_space * 0.5;
	}
	@else if $step==3 {
		@return $_space;
	}
	@else if $step==4 {
		@return $_space * 1.5;
	}
	@else if $step==5 {
		@return $_space * 3;
	}
	@return 0;
}

@each $property,
$letter in (margin: m, padding: p) {
	@each $space in $_spaces {
		.#{$letter}a-#{$space} {
			#{$property}: _calcSpace($space) + px !important;
		}
		.#{$letter}t-#{$space},
		.#{$letter}y-#{$space} {
			#{$property}-top: _calcSpace($space) + px !important;
		}
		.#{$letter}r-#{$space},
		.#{$letter}x-#{$space} {
			#{$property}-right: _calcSpace($space) + px !important;
		}
		.#{$letter}b-#{$space},
		.#{$letter}y-#{$space} {
			#{$property}-bottom: _calcSpace($space) + px !important;
		}
		.#{$letter}l-#{$space},
		.#{$letter}x-#{$space} {
			#{$property}-left: _calcSpace($space) + px !important;
		}
	}
}

.ma-auto {
	margin: auto !important;
}

.mt-auto,
.my-auto {
	margin-top: auto !important;
}

.mr-auto,
.mx-auto {
	margin-right: auto !important;
}

.mb-auto,
.my-auto {
	margin-bottom: auto !important;
}

.ml-auto,
.mx-auto {
	margin-left: auto !important;
}

@each $property,
$letter in (width: w, height: h) {
	@each $space in $_spaces {
		.#{$letter}-#{$space} {
			#{$property}: _calcSpace($space) + px !important;
		}
	}
}

@each $space in $_spaces {
	.t-lh-#{$space} {
		line-height: 1 + ($space/10) !important;
	}
}

// 
// ████  VERTICAL ALIGN  ████
// 
.va-baseline {
	vertical-align: baseline !important;
}

.va-top {
	vertical-align: top !important;
}

.va-middle {
	vertical-align: middle !important;
}

.va-bottom {
	vertical-align: bottom !important;
}

.va-text-bottom {
	vertical-align: text-bottom !important;
}

.va-text-top {
	vertical-align: text-top !important;
}

// 
// ████  DISPLAY  ████
// 
.d-none {
	display: none !important;
}

.d-inline {
	display: inline !important;
}

.d-inline-block {
	display: inline-block !important;
}

.d-block {
	display: block !important;
}

.d-table {
	display: table !important;
}

.d-table-row {
	display: table-row !important;
}

.d-table-cell {
	display: table-cell !important;
}

.d-flex {
	display: flex !important;
}

.d-inline-flex {
	display: inline-flex !important;
}

// 
// ████  FLEX  ████
// 
.fx-row {
	flex-direction: row !important;
}

.fx-column {
	flex-direction: column !important;
}

.fx-row-reverse {
	flex-direction: row-reverse !important;
}

.fx-column-reverse {
	flex-direction: column-reverse !important;
}

.fx-wrap {
	flex-wrap: wrap !important;
}

.fx-nowrap {
	flex-wrap: nowrap !important;
}

.fx-wrap-reverse {
	flex-wrap: wrap-reverse !important;
}

.fx-shrink {
	flex: 0 0 auto !important;
}

.fx-fill {
	flex: 1 1 auto !important;
}

$_fxs: (0, 1, 2, 3);
@each $_fx in $_fxs {
	.fx-#{$_fx} {
		flex: $_fx $_fx auto !important;
	}
}

.fx-justify-start {
	justify-content: flex-start !important;
}

.fx-justify-end {
	justify-content: flex-end !important;
}

.fx-justify-center {
	justify-content: center !important;
}

.fx-justify-between {
	justify-content: space-between !important;
}

.fx-justify-around {
	justify-content: space-around !important;
}

.fx-align-items-start {
	align-items: flex-start !important;
}

.fx-align-items-end {
	align-items: flex-end !important;
}

.fx-align-items-center {
	align-items: center !important;
}

.fx-align-items-baseline {
	align-items: baseline !important;
}

.fx-align-items-stretch {
	align-items: stretch !important;
}

.fx-align-content-start {
	align-content: flex-start !important;
}

.fx-align-content-end {
	align-content: flex-end !important;
}

.fx-align-content-center {
	align-content: center !important;
}

.fx-align-content-between {
	align-content: space-between !important;
}

.fx-align-content-around {
	align-content: space-around !important;
}

.fx-align-content-stretch {
	align-content: stretch !important;
}

.fx-align-self-auto {
	align-self: auto !important;
}

.fx-align-self-start {
	align-self: flex-start !important;
}

.fx-align-self-end {
	align-self: flex-end !important;
}

.fx-align-self-center {
	align-self: center !important;
}

.fx-align-self-baseline {
	align-self: baseline !important;
}

.fx-align-self-stretch {
	align-self: stretch !important;
}

// 
// ████  POSITION  ████
// 
$_positions: (static, relative, absolute, fixed, sticky);
@each $position in $_positions {
	.p-#{$position} {
		position: $position !important;
	}
}

.p-fixed-top {
	position: fixed !important;
	top: 0;
	right: 0;
	left: 0;
}

.p-fixed-bottom {
	position: fixed !important;
	right: 0;
	bottom: 0;
	left: 0;
}

// 
// ████  SIZING  ████
// 
$_sizes: (0, 25, 50, 75, 100);
@each $_size in $_sizes {
	.min-w-#{$_size} {
		min-width: percentage($_size/100) !important;
	}
	.max-w-#{$_size} {
		max-width: percentage($_size/100) !important;
	}
	.w-#{$_size} {
		width: percentage($_size/100) !important;
	}
	.min-h-#{$_size} {
		min-height: percentage($_size/100) !important;
	}
	.max-h-#{$_size} {
		max-height: percentage($_size/100) !important;
	}
	.h-#{$_size} {
		height: percentage($_size/100) !important;
	}
}

// 
// 
// 
// █████████████████████
//       GRAVEYARD
// █████████████████████
// 
// 
// 
// ████  BREAKPOINTS  ████
// 
// $_breakpoints: ('mobile', 'tablet', 'desktop', 'widescreen', 'fullhd');
// @include mobile {
// 	body:before {
// 		content: 'mobile';
// 	}
// }
// @include tablet {
// 	body:before {
// 		content: 'tablet';
// 	}
// }
// @include desktop {
// 	body:before {
// 		content: 'desktop';
// 	}
// }
// @include widescreen {
// 	body:before {
// 		content: 'widescreen';
// 	}
// }
// @include fullhd {
// 	body:before {
// 		content: 'fullhd';
// 	}
// }
// body:before {
// 	display: none;
// }
// 
// 
//
